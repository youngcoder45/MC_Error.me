Some GitHub Bash Tips And Rules:-
ðŸ’¥Firstly lets see some common commands:-
0)git init = This will make Your current directory as a Git repository . 
1) git log = It is Used to see All Your Created Cmmits in the Current
  Directory.
2)git status = It is Used to see The status of our GitHub Directory
  i.e. to check if all files were stagged or to check if any files
  requires to be commited etc.
3)git add filename.ext = It is Used to add new or modified files to stand in staged files.
4)git add -A = It is Used to add all new or modified files to stand in staged files
  present in Current directory.
5)clear = It is Used To clear THE screen.
6)git checkout filename.ext = This will restore the file to its older version which was
   stagged to Git if it wasnt stagged it will clear the file.
7)git diff= it compares your current working file with its last staged file and shows the diffrence 
  between Them if there it no diffrence it will return Nothing.
8)git diff --staged = it compares your current staged file with its last commit and 
  shows the diffrence between Them if there it no diffrence it will return Nothing.
9)git commit -m "Message"= It is Used to commit in the git after staging it.
10)git commit -a -m "Message" =It is Used to commit in the git without staging it.
11)touch filename.ext= It is used to create a New file.
12)git rm filename.ext= it is used to delete a file from current directory.
13)git rm --cached filename.ext = It is used to untrack a file from Git.
14)git log -p -num = It is used to see n(num) number of previous comment.
15)git status -s = it will show short and summarized status of our Git repository.
16)touch .gitignore = It will make a new file git ignore for ignoring the files which we dont want
   to be tracked by Git.(to know some features Go Down).
17)git branch = It will show all branches on your Git Repository.
18)git branch branchname = this will create a branch with name branchname for You.
19)git checkout branch  = This will switch to another branch with name branch.
20)git checkout -b flask = This will not only create a branch with name flask but also switch to it.
21)git merge flask = THis will merge current branch with flask.
22)git push -u remotename branchname = This will push or publish your branch on GitHub.
23)git push = This will push the branch to GitHub which you have recently pushed using -u.
git clone http-link aditya= This will clone a public repository to your folder named aditya.
24)git remote add origin https://github.com/youngcoder45/First-GitHub.git = this will make 'origin' as direct acess to your git 
   repository named First GitHub.
25)git remote= This will tell name of all your remote direct acess eg:- origin.
26)git remote -v = This will not only tell name of all your remotes but also their links.
27)git remote set-url origin git@github.com:youngcoder45/First-GitHub.git = This will give origin the link of your GitHub repository
   Which is required to publish your branch on GitHub.
ðŸ’¥Features of .gitignore file.
______________________________________________________________________________________________
|NOTE:- Here Ignore means that we dont want these files to be tracked.                        |
|1)filename.ext = this will ignore the file present in current directory named (filename.ext) |
|2)*.ext = tHis will ignore all files with extension .ext present in curent directory.        |
|3)log/ = this will ignore the folder named log present in curent directory.                  |
|4)/log.ext = This will ignore all log.ext named files presnt in folders which are            |
| present in curent directory.ðŸ’¥Features Ended.....                                           | 
|_____________________________________________________________________________________________|
